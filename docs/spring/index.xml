<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Devlog</title><link>https://seoah-lab.github.io/docs/spring/</link><description>Recent content on Devlog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://seoah-lab.github.io/docs/spring/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://seoah-lab.github.io/docs/spring/life_cycle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://seoah-lab.github.io/docs/spring/life_cycle/</guid><description>Spring Bean Lifecycle # Lifecycle을 이용해서
Spring 은 IoC 를 통하여 Bean을 관리하는 프레임 워크이다.
Bean 컨테이너(ApplicationContext)의 핵심 기능은 애플리케이션에 필요한 Bean(DI 작업이 완료되어 실행 가능한 상태의 Bean)을 생성하고, 초기화하는 것이다.
ApplicationContext는 Bean 생성 및 관리에 대한 책임을 BeanFactory에게 모두 위임한다. 즉, Spring Framework에서 Bean Lifecycle 관리에 대한 모든 책임은 BeanFactory가 가진다.
Bean의 라이프 사이클은 다음과 같은 단계로 진행된다. 생성(Create) 초기화(Init) 사용(Service) 소멸(Destory)
Bean 생성 Bean의 생성은 IoC Container를 통해 진행(싱글톤 방식) 싱글톤 방식 -&amp;gt; 인스턴스가 없다 : 생성 / 있다 : 사용 방식으로 처리</description></item></channel></rss>